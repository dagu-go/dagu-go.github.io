"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Introduction","href":"/docs/intro","docId":"intro"},{"type":"link","label":"Getting Started","href":"/docs/getting-started","docId":"getting-started"},{"type":"link","label":"Command Reference","href":"/docs/command-usage","docId":"command-usage"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Admin Settings","items":[{"type":"link","label":"Environment Variables Reference","href":"/docs/admin/environ","docId":"admin/environ"},{"type":"link","label":"Web UI Configuration Reference","href":"/docs/admin/web-config","docId":"admin/web-config"}],"collapsed":false,"collapsible":true},{"type":"category","label":"Web Interface","items":[{"type":"link","label":"All DAGs","href":"/docs/web/dags","docId":"web/dags"},{"type":"link","label":"DAG Detail","href":"/docs/web/detail","docId":"web/detail"},{"type":"link","label":"Execution History","href":"/docs/web/history","docId":"web/history"}],"collapsed":false,"collapsible":true},{"type":"category","label":"YAML Format Reference","items":[{"type":"link","label":"Minimal Definition","href":"/docs/yaml/minimal","docId":"yaml/minimal"},{"type":"link","label":"With Environment Variables","href":"/docs/yaml/with-environ","docId":"yaml/with-environ"},{"type":"link","label":"With Parameters","href":"/docs/yaml/with-params","docId":"yaml/with-params"},{"type":"link","label":"With Command Substitution","href":"/docs/yaml/with-commands","docId":"yaml/with-commands"},{"type":"link","label":"With Command Substitution","href":"/docs/yaml/with-commands","docId":"yaml/with-commands"},{"type":"link","label":"With Conditional Logics","href":"/docs/yaml/with-conditional","docId":"yaml/with-conditional"},{"type":"link","label":"With State Handlers","href":"/docs/yaml/with-handlers","docId":"yaml/with-handlers"},{"type":"link","label":"With Repeating Tasks","href":"/docs/yaml/with-repeat","docId":"yaml/with-repeat"},{"type":"link","label":"All Available Fields","href":"/docs/yaml/all-fields","docId":"yaml/all-fields"},{"type":"link","label":"Global Configuration","href":"/docs/yaml/global","docId":"yaml/global"}],"collapsed":false,"collapsible":true},{"type":"category","label":"See Also","items":[{"type":"link","label":"FAQs","href":"/docs/see-also/faq","docId":"see-also/faq"},{"type":"link","label":"Architecture of Dagu","href":"/docs/see-also/architecture","docId":"see-also/architecture"}],"collapsed":false,"collapsible":true}]},"docs":{"admin/environ":{"id":"admin/environ","title":"Environment Variables Reference","description":"You can customize the admin web UI by setting the below environment variables.","sidebar":"docs"},"admin/web-config":{"id":"admin/web-config","title":"Web UI Configuration Reference","description":"You can cutomize URL, port and Basic authentication by creating ~/.dagu/admin.yaml.","sidebar":"docs"},"command-usage":{"id":"command-usage","title":"Command Reference","description":"Content","sidebar":"docs"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"1. Installation","sidebar":"docs"},"intro":{"id":"intro","title":"Introduction","description":"Dagu executes DAGs (Directed acyclic graph) from declarative YAML definitions. Dagu also comes with a web UI for visualizing workflows.","sidebar":"docs"},"see-also/architecture":{"id":"see-also/architecture","title":"Architecture of Dagu","description":"Dagu is self-contained and simple architecture. It uses Unix sockets to communicate with running processes. You may wonder how it store the data? Dagu stores execution history data as plain simple JSON files in the local directory. Each JSON files contain all necessary information for later retry of each workflow run.","sidebar":"docs"},"see-also/faq":{"id":"see-also/faq","title":"FAQs","description":"- How to contribute?","sidebar":"docs"},"web/dags":{"id":"web/dags","title":"All DAGs","description":"DAGs page displays all workflows and real-time status. You can create a new workflow on this page by pressing the New DAG button.","sidebar":"docs"},"web/detail":{"id":"web/detail","title":"DAG Detail","description":"Status Tab","sidebar":"docs"},"web/history":{"id":"web/history","title":"Execution History","description":"The history page shows past execution details and logs. It is useful to investigate troubles or something happend in the past workflow execution.","sidebar":"docs"},"yaml/all-fields":{"id":"yaml/all-fields","title":"All Available Fields","description":"Combining these settings gives you granular control over how the workflow runs.","sidebar":"docs"},"yaml/global":{"id":"yaml/global","title":"Global Configuration","description":"Creating a global configuration ~/.dagu/config.yaml is a convenient way to organize shared settings, such as logDir or env.","sidebar":"docs"},"yaml/minimal":{"id":"yaml/minimal","title":"Minimal Definition","description":"A minimal workflow definition is as follows:","sidebar":"docs"},"yaml/with-commands":{"id":"yaml/with-commands","title":"With Command Substitution","description":"You can use command substitution in field values. I.e., a string enclosed in backquotes (`  ``) is evaluated as a command and replaced with the result of standard output.","sidebar":"docs"},"yaml/with-conditional":{"id":"yaml/with-conditional","title":"With Conditional Logics","description":"Sometimes you have parts of a workflow that you only want to run under certain conditions. You can use the precondition field to add conditional branches to your workflow.","sidebar":"docs"},"yaml/with-environ":{"id":"yaml/with-environ","title":"With Environment Variables","description":"You can define Environment variables and refer using env field.","sidebar":"docs"},"yaml/with-handlers":{"id":"yaml/with-handlers","title":"With State Handlers","description":"It is often desirable to take action when a specific event happens, for example, when a workflow fails. To achieve this, you can use handlerOn fields.","sidebar":"docs"},"yaml/with-params":{"id":"yaml/with-params","title":"With Parameters","description":"You can define parameters using params field and refer to each parameter as $1, $2, etc. Parameters can also be command substitutions or environment variables. It can be overridden by --params= parameter of start command.","sidebar":"docs"},"yaml/with-repeat":{"id":"yaml/with-repeat","title":"With Repeating Tasks","description":"If you want a task to repeat execution at regular intervals, you can use the repeatPolicy field. If you want to stop the repeating task, you can use the stop command to gracefully stop the task.","sidebar":"docs"}}}')}}]);